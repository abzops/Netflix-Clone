{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Abhinand\\\\Desktop\\\\netflix-clone\\\\src\\\\Components\\\\Home\\\\Banner\\\\Banner.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"../../../axios\";\nimport \"./Banner.css\";\nimport { API_KEY, imageUrl } from \"../../../constants/constants\";\nimport { useEffect, useState } from \"react\";\nimport YouTube from \"react-youtube\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTimesCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Banner() {\n  _s();\n\n  const [movie, setMovie] = useState(\"\");\n  useEffect(() => {\n    axios.get(`trending/all/week?api_key=${API_KEY}&language=en-US`).then(response => {\n      for (let i = 0; i < 20; i++) {\n        task(i);\n      }\n\n      function task(i) {\n        setTimeout(function () {\n          setMovie(response.data.results[i]);\n        }, 8000 * i);\n      }\n    });\n  }, []);\n  const [urlId, setUrlId] = useState(\"\");\n\n  const handleMovie = id => {\n    //console.log(id);\n    axios.get(`/movie/${id}/videos?api_key=${API_KEY}&language=en-US`).then(response => {\n      console.log(response.data);\n\n      if (response.data.results.length !== 0) {\n        setUrlId(response.data.results[0]);\n      }\n    });\n  };\n\n  const opts = {\n    playerVars: {\n      autoplay: 1\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"banner\",\n    style: {\n      backgroundImage: `url(${movie ? imageUrl + movie.backdrop_path : \"\"})`\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"title\",\n        children: movie.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleMovie(movie.id),\n          className: \"button\",\n          children: \"Play\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          children: \"My List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), urlId && /*#__PURE__*/_jsxDEV(YouTube, {\n        videoId: urlId.key,\n        opts: opts,\n        className: \"YouTube\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), urlId && /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faTimesCircle,\n        className: \"icons\",\n        si: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"description\",\n        children: movie.overview\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fade\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Banner, \"Nq4SomQcG3kqGrbOCb5CYvfg46g=\");\n\n_c = Banner;\nexport default Banner;\n\nvar _c;\n\n$RefreshReg$(_c, \"Banner\");","map":{"version":3,"sources":["C:/Users/Abhinand/Desktop/netflix-clone/src/Components/Home/Banner/Banner.js"],"names":["axios","API_KEY","imageUrl","useEffect","useState","YouTube","FontAwesomeIcon","faTimesCircle","Banner","movie","setMovie","get","then","response","i","task","setTimeout","data","results","urlId","setUrlId","handleMovie","id","console","log","length","opts","playerVars","autoplay","backgroundImage","backdrop_path","title","key","overview"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,gBAAlB;AACA,OAAO,cAAP;AACA,SAASC,OAAT,EAAkBC,QAAlB,QAAkC,8BAAlC;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,aAAT,QAA8B,mCAA9B;;;AAEA,SAASC,MAAT,GAAkB;AAAA;;AAChB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AACAD,EAAAA,SAAS,CAAC,MAAM;AACdH,IAAAA,KAAK,CACFW,GADH,CACQ,6BAA4BV,OAAQ,iBAD5C,EAEGW,IAFH,CAESC,QAAD,IAAc;AAClB,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AAC3BC,QAAAA,IAAI,CAACD,CAAD,CAAJ;AACD;;AAED,eAASC,IAAT,CAAcD,CAAd,EAAiB;AACfE,QAAAA,UAAU,CAAC,YAAY;AACrBN,UAAAA,QAAQ,CAACG,QAAQ,CAACI,IAAT,CAAcC,OAAd,CAAsBJ,CAAtB,CAAD,CAAR;AACD,SAFS,EAEP,OAAOA,CAFA,CAAV;AAGD;AACF,KAZH;AAaD,GAdQ,EAcN,EAdM,CAAT;AAgBA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBhB,QAAQ,CAAC,EAAD,CAAlC;;AACA,QAAMiB,WAAW,GAAIC,EAAD,IAAQ;AAC1B;AACAtB,IAAAA,KAAK,CACFW,GADH,CACQ,UAASW,EAAG,mBAAkBrB,OAAQ,iBAD9C,EAEGW,IAFH,CAESC,QAAD,IAAc;AAClBU,MAAAA,OAAO,CAACC,GAAR,CAAYX,QAAQ,CAACI,IAArB;;AACA,UAAIJ,QAAQ,CAACI,IAAT,CAAcC,OAAd,CAAsBO,MAAtB,KAAiC,CAArC,EAAwC;AACtCL,QAAAA,QAAQ,CAACP,QAAQ,CAACI,IAAT,CAAcC,OAAd,CAAsB,CAAtB,CAAD,CAAR;AACD;AACF,KAPH;AAQD,GAVD;;AAYA,QAAMQ,IAAI,GAAG;AACXC,IAAAA,UAAU,EAAE;AACVC,MAAAA,QAAQ,EAAE;AADA;AADD,GAAb;AAMA,sBACE;AACE,IAAA,SAAS,EAAC,QADZ;AAEE,IAAA,KAAK,EAAE;AACLC,MAAAA,eAAe,EAAG,OAAMpB,KAAK,GAAGP,QAAQ,GAAGO,KAAK,CAACqB,aAApB,GAAoC,EAAG;AAD/D,KAFT;AAAA,4BAME;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,8BACE;AAAI,QAAA,SAAS,EAAC,OAAd;AAAA,kBAAuBrB,KAAK,CAACsB;AAA7B;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,gCACE;AAAQ,UAAA,OAAO,EAAE,MAAMV,WAAW,CAACZ,KAAK,CAACa,EAAP,CAAlC;AAA8C,UAAA,SAAS,EAAC,QAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AAAQ,UAAA,SAAS,EAAC,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,EAQGH,KAAK,iBACJ,QAAC,OAAD;AAAS,QAAA,OAAO,EAAEA,KAAK,CAACa,GAAxB;AAA6B,QAAA,IAAI,EAAEN,IAAnC;AAAyC,QAAA,SAAS,EAAC;AAAnD;AAAA;AAAA;AAAA;AAAA,cATJ,EAWGP,KAAK,iBAAI,QAAC,eAAD;AAAiB,QAAA,IAAI,EAAEZ,aAAvB;AAAsC,QAAA,SAAS,EAAC,OAAhD;AAAwD,QAAA,EAAE;AAA1D;AAAA;AAAA;AAAA;AAAA,cAXZ,eAYE;AAAI,QAAA,SAAS,EAAC,aAAd;AAAA,kBAA6BE,KAAK,CAACwB;AAAnC;AAAA;AAAA;AAAA;AAAA,cAZF;AAAA;AAAA;AAAA;AAAA;AAAA,YANF,eAoBE;AAAK,MAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,YApBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD;;GA7DQzB,M;;KAAAA,M;AA+DT,eAAeA,MAAf","sourcesContent":["import axios from \"../../../axios\";\r\nimport \"./Banner.css\";\r\nimport { API_KEY, imageUrl } from \"../../../constants/constants\";\r\nimport { useEffect, useState } from \"react\";\r\nimport YouTube from \"react-youtube\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTimesCircle } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nfunction Banner() {\r\n  const [movie, setMovie] = useState(\"\");\r\n  useEffect(() => {\r\n    axios\r\n      .get(`trending/all/week?api_key=${API_KEY}&language=en-US`)\r\n      .then((response) => {\r\n        for (let i = 0; i < 20; i++) {\r\n          task(i);\r\n        }\r\n\r\n        function task(i) {\r\n          setTimeout(function () {\r\n            setMovie(response.data.results[i]);\r\n          }, 8000 * i);\r\n        }\r\n      });\r\n  }, []);\r\n\r\n  const [urlId, setUrlId] = useState(\"\");\r\n  const handleMovie = (id) => {\r\n    //console.log(id);\r\n    axios\r\n      .get(`/movie/${id}/videos?api_key=${API_KEY}&language=en-US`)\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        if (response.data.results.length !== 0) {\r\n          setUrlId(response.data.results[0]);\r\n        }\r\n      });\r\n  };\r\n\r\n  const opts = {\r\n    playerVars: {\r\n      autoplay: 1,\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"banner\"\r\n      style={{\r\n        backgroundImage: `url(${movie ? imageUrl + movie.backdrop_path : \"\"})`,\r\n      }}\r\n    >\r\n      <div className=\"content\">\r\n        <h1 className=\"title\">{movie.title}</h1>\r\n        <div className=\"buttons\">\r\n          <button onClick={() => handleMovie(movie.id)} className=\"button\">\r\n            Play\r\n          </button>\r\n          <button className=\"button\">My List</button>\r\n        </div>\r\n        {urlId && (\r\n          <YouTube videoId={urlId.key} opts={opts} className=\"YouTube\" />\r\n        )}\r\n        {urlId && <FontAwesomeIcon icon={faTimesCircle} className=\"icons\" si/>}\r\n        <h1 className=\"description\">{movie.overview}</h1>\r\n      </div>\r\n      <div className=\"fade\"></div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Banner;\r\n"]},"metadata":{},"sourceType":"module"}